#pragma once
#include <stdint.h>
#include <stdbool.h>

//SSD1306_LCDHEIGHT 默认为32
#ifndef SSD1306_LCDHEIGHT
#define SSD1306_LCDHEIGHT 64
#endif

#define SSD1306_ROWS (SSD1306_LCDHEIGHT / 8)
#define SSD1306_COLS 128

enum ssd1306_commands {
    SSD1306_SETLOWCOLUMN = 0x00,
    SSD1306_SETHIGHCOLUMN = 0x10,
    SSD1306_MEMORYMODE = 0x20,
    SSD1306_COLUMNADDR = 0x21,
    SSD1306_PAGEADDR = 0x22,
    SSD1306_SETSTARTLINE = 0x40,

    SSD1306_SETCONTRAST = 0x81,
    SSD1306_CHARGEPUMP = 0x8D,
    SSD1306_SEGREMAP_RESET = 0xA0,
    SSD1306_SEGREMAP_INVERSE = 0xA1,
    SSD1306_DISPLAYALLON_RESUME = 0xA4,
    SSD1306_DISPLAYALLON = 0xA5,
    SSD1306_NORMALDISPLAY = 0xA6,
    SSD1306_INVERTDISPLAY = 0xA7,
    SSD1306_SETMULTIPLEX = 0xA8,
    SSD1306_DISPLAYOFF = 0xAE,
    SSD1306_DISPLAYON = 0xAF,
    SSD1306_PAGESTARTADDR = 0xB0,
    SSD1306_COMSCANINC = 0xC0,
    SSD1306_COMSCANDEC = 0xC8,

    SSD1306_SETDISPLAYOFFSET = 0xD3,
    SSD1306_SETDISPLAYCLOCKDIV = 0xD5,
    SSD1306_SETPRECHARGE = 0xD9,
    SSD1306_SETCOMPINS = 0xDA,
    SSD1306_SETVCOMDETECT = 0xDB,

    SSD1306_RIGHT_HORIZONTAL_SCROLL = 0x26,
    SSD1306_LEFT_HORIZONTAL_SCROLL = 0x27,
    SSD1306_VERTICAL_AND_RIGHT_HORIZONTAL_SCROLL = 0x29,
    SSD1306_VERTICAL_AND_LEFT_HORIZONTAL_SCROLL = 0x2A,
    SSD1306_DEACTIVATE_SCROLL = 0x2E,
    SSD1306_ACTIVATE_SCROLL = 0x2F,
    SSD1306_SET_VERTICAL_SCROLL_AREA = 0xA3,
};

extern uint8_t ssd1306_display_buffer[];
extern bool ssd1306_buff_dirty[SSD1306_ROWS];
void ssd1306_show_buff(uint8_t row, uint8_t col_start, uint8_t len);
void ssd1306_show_dirty_block();

#ifndef SSD1306_INIT_BUFF
#define SSD1306_INIT_BUFF { }
#endif
